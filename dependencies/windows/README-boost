
NOTE: How to upgrade boost-1.50-win-gcc47.zip
=============================================================================

The install-dependencies.cmd script installs a prebuilt version of Boost 
1.50. This document describes the steps required to update to a more recent
version of Boost.

boost-1.50-win-gcc47.zip is a prepackaged set of boost 1.50 windows headers and
binaries (32 and 64 bit) built for MinGW 4.7. To upgrade to either a new
boost or MinGW version you should download the appropriate boost windows
source archive, boostrap the boost build system (note that this
requires MSFT Visual C++) then follow the instructions below 

Win32
---------

(ensure 32 bit mingw is in the path)

bjam --prefix=C:\boost32 toolset=gcc address-model=32 ^ 
 variant=debug,release link=static threading=multi ^ 
 install

Win64
--------- 

(ensure 64 bit mingw is in the path) 

bjam --prefix=C:\boost64 toolset=gcc address-model=64 ^
 variant=debug,release link=static threading=multi ^
 define=BOOST_USE_WINDOWS_H ^
 install

Note the additional define of BOOST_USE_WINDOWS_H required for the 64 bit build 

After this you can create a new boost-win.zip archive using the contents
of the C:\boost32 and C:\boost64 directories.


NOTE: Getting boost to work with mingw64
=============================================================================

See the following article for general approach/guidelines:

http://sourceforge.net/apps/trac/mingw-w64/wiki/Building%20Boost

Note that in order to build rstudio with boost under win64 we had to make
the following additional accomodations:

1) define BOOST_USE_WINDOWS_H to eliminate errors compiling boost::thread
   (see thread: http://lists.boost.org/boost-users/2010/02/55945.php)

2) #undef BOOST_USE_WINDOWS_H prior to including <boost/interprocess/*>
within BoostErrors.hpp

3) add a dummy definitions for boost::thread::tss_cleanup_implemented
   (see ticket: https://svn.boost.org/trac/boost/ticket/4258)
