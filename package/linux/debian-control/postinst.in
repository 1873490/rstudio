#!/bin/sh

# errors shouldn't cause script to exit
set +e 

# add rserver user account
useradd -r rstudio-server
groupadd -r rstudio-server

# find architecture dir (it's okay if neither branch succeeds)
if test -d /usr/lib/x86_64-linux-gnu
then
  architecture_dir=/usr/lib/x86_64-linux-gnu
elif test -d /usr/lib/i386-linux-gnu 
then
  architecture_dir=/usr/lib/i386-linux-gnu
fi

# create openssl softlinks back to libssl1.0.0 if libssl1.0.2 is installed
# (Debian 9 uses a libssl with a SONAME of 1.0.2 even though it's ABI 
# compatible with 1.0.0 for our purposes). 
if test -f $architecture_dir/libssl.so.1.0.2
then
  ln -s -f $architecture_dir/libssl.so.1.0.2 ${CMAKE_INSTALL_PREFIX}/bin/libssl.so.1.0.0
fi
if test -f $architecture_dir/libcrypto.so.1.0.2
then
  ln -s -f $architecture_dir/libcrypto.so.1.0.2 ${CMAKE_INSTALL_PREFIX}/bin/libcrypto.so.1.0.0
fi

# create softlink to admin script in /usr/sbin
ln -f -s ${CMAKE_INSTALL_PREFIX}/bin/rstudio-server /usr/sbin/rstudio-server

# create config directory and default config files
mkdir -p /etc/rstudio
if ! test -f /etc/rstudio/rserver.conf
then
  sh -c "printf '# Server Configuration File\n\n' > /etc/rstudio/rserver.conf"
fi
if ! test -f /etc/rstudio/rsession.conf
then
  sh -c "echo '# R Session Configuration File\n\n' > /etc/rstudio/rsession.conf"
fi

# create var directories
mkdir -p /var/run/rstudio-server
mkdir -p /var/lock/rstudio-server
mkdir -p /var/log/rstudio-server
mkdir -p /var/lib/rstudio-server
mkdir -p /var/lib/rstudio-server/conf
mkdir -p /var/lib/rstudio-server/body
mkdir -p /var/lib/rstudio-server/proxy

# suspend all sessions
rstudio-server force-suspend-all

# check lsb release and init system
LSB_RELEASE=`lsb_release --id --short`
INIT_SYSTEM=`cat /proc/1/comm 2>/dev/null`

# add apparmor profile (but don't for systemd as this borks up process management)
if test $LSB_RELEASE = "Ubuntu" && test -d /etc/apparmor.d/ && ! test $INIT_SYSTEM = "systemd"
then
   cp ${CMAKE_INSTALL_PREFIX}/extras/apparmor/rstudio-server /etc/apparmor.d/
   apparmor_parser -r /etc/apparmor.d/rstudio-server 2>/dev/null
elif test -e /etc/apparmor.d/rstudio-server
then
   rm -f /etc/apparmor.d/rstudio-server
   invoke-rc.d apparmor reload 2>/dev/null
fi

# add systemd, upstart, or init.d script and start the server
if test "$INIT_SYSTEM" = "systemd"
then
   systemctl stop rstudio-server.service 2>/dev/null
   systemctl disable rstudio-server.service 2>/dev/null
   cp ${CMAKE_INSTALL_PREFIX}/extras/systemd/rstudio-server.service /etc/systemd/system/rstudio-server.service
   systemctl daemon-reload
   systemctl enable rstudio-server.service
   systemctl start rstudio-server.service
   sleep 1
   systemctl --no-pager status rstudio-server.service
elif test $LSB_RELEASE = "Ubuntu" && test -d /etc/init/
then
   cp ${CMAKE_INSTALL_PREFIX}/extras/upstart/rstudio-server.conf /etc/init/
   initctl reload-configuration
   initctl stop rstudio-server 2>/dev/null
   initctl start rstudio-server
else
   cp ${CMAKE_INSTALL_PREFIX}/extras/init.d/debian/rstudio-server /etc/init.d/
   chmod +x /etc/init.d/rstudio-server
   update-rc.d rstudio-server defaults
   /etc/init.d/rstudio-server stop  2>/dev/null
   /etc/init.d/rstudio-server start
fi

# clear error termination state
set -e
